!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("JDate",[],t):"object"==typeof exports?exports.JDate=t():e.JDate=t()}(this,(()=>(()=>{var e={51:e=>{e.exports={MONTH_NAMES:["فروردین","اردیبهشت","خرداد","تیر","امرداد","شهریور","مهر","آبان","آذر","دی","بهمن","اسفند"],ABBR_DAYS:["۱ش","۲ش","۳ش","۴ش","۵ش","ج","ش"],DAYS_NAMES:["یکشنبه","دوشنبه","سه‌شنبه","چهارشنبه","پنج‌شنبه","جمعه","شنبه"],GREGORIAN_EPOCH:1,GREGORIAN_TO_FIXED_OFFSET:719528,PERSIAN_EPOCH:226896,PERSIAN_CYCLE_DAYS:12053,NON_LEAP_CORRECTION:[1502,1601,1634,1667,1700,1733,1766,1799,1832,1865,1898,1931,1964,1997,2030,2059,2063,2096,2129,2158,2162,2191,2195,2224,2228,2257,2261,2290,2294,2323,2327,2356,2360,2389,2393,2422,2426,2455,2459,2488,2492,2521,2525,2554,2558,2587,2591,2620,2624,2653,2657,2686,2690,2719,2723,2748,2752,2756,2781,2785,2789,2818,2822,2847,2851,2855,2880,2884,2888,2913,2917,2921,2946,2950,2954,2979,2983,2987]}}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var a=t[n]={exports:{}};return e[n](a,a.exports,r),a.exports}r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var n={};return(()=>{"use strict";r.d(n,{default:()=>d});var e=r(51);function t(e,t){return Math.floor((e+t-1)/t)}function o(e){return e&&1===e.length?"0".concat(e):e}function a(e,t){var r=e.match(/[yY]+/);if(!r)return e;switch(r[0]){case"YYYY":case"YYY":return a(e.replace(r,t.getFullYear()),t);case"YY":return a(e.replace(r,String(t.getFullYear()).slice(2)),t);default:return e}}function i(t,r){var n=t.match(/[mM]+/);if(!n)return t;switch(n[0]){case"M":return i(t.replace(n,r.getMonth()),r);case"MM":var a=o(r.getMonth().toString());return i(t.replace(n,a),r);case"MMM":case"MMMM":return i(t.replace(n,e.MONTH_NAMES[r.getMonth()-1]),r);default:return t}}function u(t,r){var n=t.match(/[dD]+/);if(!n)return t;switch(n[0]){case"D":return u(t.replace(n,r.getDate()),r);case"DD":var a=o(r.getDate().toString());return u(t.replace(n,a),r);case"d":case"dd":return u(t.replace(n,e.ABBR_DAYS[r.getDay()]),r);case"ddd":case"dddd":return u(t.replace(n,e.DAYS_NAMES[r.getDay()]),r);default:return t}}function l(e){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l(e)}function f(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,c(n.key),n)}}function c(e){var t=function(e,t){if("object"!=l(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=l(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==l(t)?t:t+""}var s=function(){function r(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,r)}return n=r,o=[{key:"gregorianToFixed",value:function(t,n,o){return e.GREGORIAN_EPOCH-1+365*(t-1)+Math.floor((t-1)/4)-Math.floor((t-1)/100)+Math.floor((t-1)/400)+Math.floor((367*n-362)/12)+(n<=2?0:r.leapGregorian(t)?-1:-2)+o}},{key:"gregorianYearFromFixed",value:function(t){var r=t-e.GREGORIAN_EPOCH,n=Math.floor(r/146097),o=r%146097,a=Math.floor(o/36524),i=o%36524,u=Math.floor(i/1461),l=i%1461,f=Math.floor(l/365),c=400*n+100*a+4*u+f;return 4===a||4===f?c:c+1}},{key:"gregorianNewYear",value:function(e){return r.gregorianToFixed(e,1,1)}},{key:"fixedToGregorian",value:function(e){var t,n=r.gregorianYearFromFixed(e),o=e-r.gregorianNewYear(n);t=e<r.gregorianToFixed([n,3,1])?0:r.leapGregorian(n)?1:2;var a=Math.floor((12*(o+t)+373)/367);return[n,a,e-r.gregorianToFixed(n,a,1)+1]}},{key:"jalaliToFixed",value:function(t,r,n){var o=e.PERSIAN_EPOCH-1+365*(t-1)+Math.floor((8*t+21)/33);return e.NON_LEAP_CORRECTION.includes(t-1)&&(o-=1),o-1+(r<=7?31*(r-1):30*(r-1)+6)+n}},{key:"fixedToJalali",value:function(n){var o=n-r.jalaliToFixed(1,1,1),a=1+Math.floor((33*o+3)/e.PERSIAN_CYCLE_DAYS),i=n-r.jalaliToFixed(a,1,1)+1;366===i&&e.NON_LEAP_CORRECTION.includes(a)&&(a+=1,i=1);var u=i<=186?t(i,31):t(i-6,30);return[a,u,n-r.jalaliToFixed(a,u,1)+1]}},{key:"leapPersian",value:function(t){return!e.NON_LEAP_CORRECTION.includes(t)&&(!!e.NON_LEAP_CORRECTION.includes(t-1)||(25*t+11)%33<8)}},{key:"leapGregorian",value:function(e){return e%4==0&&![100,200,300].includes(e%400)}}],null&&f(n.prototype,null),o&&f(n,o),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,o}();function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function p(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=Array(t);r<t;r++)n[r]=e[r];return n}function h(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,v(n.key),n)}}function v(e){var t=function(e,t){if("object"!=y(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=y(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==y(t)?t:t+""}var d=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e);for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];if(Array.isArray(r[0])||r[0]instanceof Date)this.input=r[0];else if(3===r.length)this.input=r;else{if(r.length)throw new Error("Unexpected input");this.input=new Date}Array.isArray(this.input)?(this.date=this.input.map((function(e){return parseInt(e,10)})),this._d=this.toGregorian()):this.input instanceof Date&&(this._d=this.input,this.date=e.toJalali(this.input))}return t=e,n=[{key:"toJalali",value:function(e){var t=s.gregorianToFixed(e.getFullYear(),e.getMonth()+1,e.getDate());return s.fixedToJalali(t)}},{key:"to_jalali",value:function(t){return e.toJalali(t)}},{key:"toGregorian",value:function(e,t,r){var n=s.fixedToGregorian(s.jalaliToFixed(e,t,r));return new Date(+n[0],+n[1]-1,+n[2])}},{key:"to_gregorian",value:function(t,r,n){return e.toGregorian(t,r,n)}},{key:"isLeapYear",value:function(e){return s.leapPersian(e)}},{key:"daysInMonth",value:function(t,r){var n=t-Math.floor(r/12),o=r-12*Math.floor(r/12);return o<0?(o+=12,n-=1):0===o&&(o=12),o<6?31:o<11||e.isLeapYear(n)?30:29}}],(r=[{key:"toGregorian",value:function(){return e.toGregorian(this.date[0],this.date[1],this.date[2])}},{key:"getFullYear",value:function(){return this.date[0]}},{key:"setFullYear",value:function(e){return this.date[0]=parseInt(e,10),this.input=this.toGregorian(),this}},{key:"getMonth",value:function(){return this.date[1]}},{key:"setMonth",value:function(e){var t=function(e,t){if(t>12||t<=0){var r=Math.floor((t-1)/12);return[e-r,t-12*r]}return[e,t]}(this.getFullYear(),parseInt(e,10)),r=function(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,a,i,u=[],l=!0,f=!1;try{if(a=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;l=!1}else for(;!(l=(n=a.call(r)).done)&&(u.push(n.value),u.length!==t);l=!0);}catch(e){f=!0,o=e}finally{try{if(!l&&null!=r.return&&(i=r.return(),Object(i)!==i))return}finally{if(f)throw o}}return u}}(e,t)||function(e,t){if(e){if("string"==typeof e)return p(e,t);var r={}.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?p(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(t,2);return this.date[0]=r[0],this.date[1]=r[1],this.input=this.toGregorian(),this}},{key:"getDate",value:function(){return this.date[2]}},{key:"setDate",value:function(e){return this.date[2]=parseInt(e,10),this.input=this.toGregorian(),this}},{key:"getDay",value:function(){return this._d.getDay()}},{key:"format",value:function(e){var t=a(e,this);return u(t=i(t,this),this)}}])&&h(t.prototype,r),n&&h(t,n),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,r,n}()})(),n.default})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,